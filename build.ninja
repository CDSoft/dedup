# Ninja file generated by bang (https://cdelord.fr/bang)
# bang build.lua -o build.ninja

# Targets:
#   help      show this help message
#   install   install  in PREFIX or ~/.local

# Files installed in bin
#   .build/dedup

ninja_required_version = 1.11.1

######################################################################
# This file is part of dedup.
#
# dedup is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# dedup is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with dedup.  If not, see <https://www.gnu.org/licenses/>.
#
# For further information about dedup you can visit
# https://cdelord.fr/dedup
######################################################################

builddir = .build

rule clang-cc
  description = clang $out
  command = clang -c -MD -MF $depfile -std=gnu2x -O3 -ferror-limit=1 -Wall -Wextra -Wstrict-prototypes -Wmissing-field-initializers -Wmissing-prototypes -Wmissing-declarations -Werror=switch-enum -Werror=implicit-fallthrough -Werror=missing-prototypes -Werror $in -o $out
  depfile = $out.d

rule clang-ar
  description = ar $out
  command = ar -crs $out $in

rule clang-so
  description = clang $out
  command = clang -shared -o $out $in

rule clang-ld
  description = clang $out
  command = clang -s -o $out $in

build $builddir/tmp/dedup.tmp/src/dedup.o: clang-cc src/dedup.c
build $builddir/tmp/dedup.tmp/src/file_list.o: clang-cc src/file_list.c
build $builddir/tmp/dedup.tmp/src/name_list.o: clang-cc src/name_list.c
build $builddir/tmp/dedup.tmp/src/options.o: clang-cc src/options.c
build $builddir/tmp/dedup.tmp/src/path.o: clang-cc src/path.c
build $builddir/tmp/dedup.tmp/src/sha1.o: clang-cc src/sha1.c
build $builddir/dedup: clang-ld $builddir/tmp/dedup.tmp/src/dedup.o $builddir/tmp/dedup.tmp/src/file_list.o $builddir/tmp/dedup.tmp/src/name_list.o $builddir/tmp/dedup.tmp/src/options.o $builddir/tmp/dedup.tmp/src/path.o $builddir/tmp/dedup.tmp/src/sha1.o

default $builddir/dedup

######################################################################
# Installation
######################################################################

prefix = ~/.local

rule install-bin
  description = INSTALL $in to bin
  command = install -v -D -t $${PREFIX:-$prefix}/bin $in

build install-bin: install-bin $builddir/dedup
build install: phony install-bin

######################################################################
# Help
######################################################################

rule help
  description = help
  command = echo "Targets:"; $
            echo "  help      show this help message"; $
            echo "  install   install  in PREFIX or ~/.local"

build help: help

######################################################################
# Regenerate build.ninja when build.lua changes
######################################################################

rule bang
  command = bang $in -o $out
  generator = true

build build.ninja: bang build.lua
